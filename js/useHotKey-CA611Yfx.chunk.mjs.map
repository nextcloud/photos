{"version":3,"file":"useHotKey-CA611Yfx.chunk.mjs","sources":["../node_modules/@nextcloud/vue/dist/Composables/useHotKey.mjs"],"sourcesContent":["import { onKeyStroke } from \"@vueuse/core\";\nconst disableKeyboardShortcuts = window.OCP?.Accessibility?.disableKeyboardShortcuts?.();\nconst isMac = /mac|ipad|iphone|darwin/i.test(navigator.userAgent);\nfunction shouldIgnoreEvent(event) {\n  if (!(event.target instanceof HTMLElement) || event.target instanceof HTMLInputElement || event.target instanceof HTMLTextAreaElement || event.target instanceof HTMLSelectElement || event.target.isContentEditable) {\n    return true;\n  }\n  return document.getElementsByClassName(\"modal-mask\").length !== 0;\n}\nfunction eventHandler(callback, options) {\n  return (event) => {\n    const ctrlKeyPressed = isMac ? event.metaKey : event.ctrlKey;\n    if (ctrlKeyPressed !== Boolean(options.ctrl)) {\n      return;\n    } else if (event.altKey !== Boolean(options.alt)) {\n      return;\n    } else if (options.shift !== void 0 && event.shiftKey !== Boolean(options.shift)) {\n      return;\n    } else if (shouldIgnoreEvent(event)) {\n      return;\n    }\n    if (options.prevent) {\n      event.preventDefault();\n    }\n    if (options.stop) {\n      event.stopPropagation();\n    }\n    callback(event);\n  };\n}\nfunction useHotKey(keysOrFilter, callback = () => {\n}, options = {}) {\n  if (disableKeyboardShortcuts) {\n    return () => {\n    };\n  }\n  const validateKeyEvent = (event, key) => {\n    if (options.caseSensitive) {\n      return event.key === key;\n    }\n    return event.key.toLowerCase() === key.toLowerCase();\n  };\n  const keyFilter = (event) => {\n    if (typeof keysOrFilter === \"function\") {\n      return keysOrFilter(event);\n    } else if (typeof keysOrFilter === \"string\") {\n      return validateKeyEvent(event, keysOrFilter);\n    } else if (Array.isArray(keysOrFilter)) {\n      return keysOrFilter.some((key) => validateKeyEvent(event, key));\n    } else {\n      return true;\n    }\n  };\n  const stopKeyDown = onKeyStroke(keyFilter, eventHandler(callback, options), {\n    eventName: \"keydown\",\n    dedupe: true,\n    passive: !options.prevent\n  });\n  const stopKeyUp = options.push ? onKeyStroke(keyFilter, eventHandler(callback, options), {\n    eventName: \"keyup\",\n    passive: !options.prevent\n  }) : () => {\n  };\n  return () => {\n    stopKeyDown();\n    stopKeyUp();\n  };\n}\nexport {\n  useHotKey\n};\n//# sourceMappingURL=useHotKey.mjs.map\n"],"names":["disableKeyboardShortcuts","isMac","shouldIgnoreEvent","event","eventHandler","callback","options","useHotKey","keysOrFilter","validateKeyEvent","key","keyFilter","stopKeyDown","onKeyStroke","stopKeyUp"],"mappings":"gDACA,MAAMA,EAA2B,OAAO,KAAK,eAAe,2BAA4B,EAClFC,EAAQ,0BAA0B,KAAK,UAAU,SAAS,EAChE,SAASC,EAAkBC,EAAO,CAChC,MAAI,EAAEA,EAAM,kBAAkB,cAAgBA,EAAM,kBAAkB,kBAAoBA,EAAM,kBAAkB,qBAAuBA,EAAM,kBAAkB,mBAAqBA,EAAM,OAAO,kBAC1L,GAEF,SAAS,uBAAuB,YAAY,EAAE,SAAW,CAClE,CACA,SAASC,EAAaC,EAAUC,EAAS,CACvC,OAAQH,GAAU,CAEhB,IADuBF,EAAQE,EAAM,QAAUA,EAAM,WAC9B,CAAA,CAAQG,EAAQ,KAEhC,CAIA,GAJIH,EAAM,SAAW,CAAQG,CAAAA,EAAQ,KAEjCA,EAAQ,QAAU,QAAUH,EAAM,WAAa,CAAQG,CAAAA,EAAQ,OAE/DJ,EAAkBC,CAAK,EAChC,OAEEG,EAAQ,SACVH,EAAM,eAAgB,EAEpBG,EAAQ,MACVH,EAAM,gBAAiB,EAEzBE,EAASF,CAAK,CACf,CAAA,CACH,CACA,SAASI,EAAUC,EAAcH,EAAW,IAAM,CAClD,EAAGC,EAAU,CAAA,EAAI,CACf,GAAIN,EACF,MAAO,IAAM,CACZ,EAEH,MAAMS,EAAmB,CAACN,EAAOO,IAC3BJ,EAAQ,cACHH,EAAM,MAAQO,EAEhBP,EAAM,IAAI,YAAW,IAAOO,EAAI,YAAa,EAEhDC,EAAaR,GACb,OAAOK,GAAiB,WACnBA,EAAaL,CAAK,EAChB,OAAOK,GAAiB,SAC1BC,EAAiBN,EAAOK,CAAY,EAClC,MAAM,QAAQA,CAAY,EAC5BA,EAAa,KAAME,GAAQD,EAAiBN,EAAOO,CAAG,CAAC,EAEvD,GAGLE,EAAcC,EAAYF,EAAWP,EAAaC,EAAUC,CAAO,EAAG,CAC1E,UAAW,UACX,OAAQ,GACR,QAAS,CAACA,EAAQ,OACtB,CAAG,EACKQ,EAAYR,EAAQ,KAAOO,EAAYF,EAAWP,EAAaC,EAAUC,CAAO,EAAG,CACvF,UAAW,QACX,QAAS,CAACA,EAAQ,OACnB,CAAA,EAAI,IAAM,CACV,EACD,MAAO,IAAM,CACXM,EAAa,EACbE,EAAW,CACZ,CACH","x_google_ignoreList":[0]}